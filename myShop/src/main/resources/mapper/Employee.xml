<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.myShop.mapper.EmployeeMapper">

	<select id="getEmployeeList" resultType="map" parameterType="map">
		SELECT  b.user_id, b.user_name, c.status_nm, a.id
		FROM employee_info a
		LEFT OUTER JOIN user_info b on b.id::varchar = a.id
		LEFT OUTER JOIN employee_status c on c.status = a.user_status 
		WHERE a.shop_id = #{_shopId}
		ORDER BY a.created_dt
	</select>
	
	<select id="findEmployee" resultType="map" parameterType="map">
		SELECT a.id, a.user_id, a.user_name, b.status_nm
		FROM user_info a
		LEFT OUTER JOIN employee_status b on b.status = a.user_status 
		WHERE shop_id = #{_shopId}
		AND user_id != #{_userId}
		AND a.user_name LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY a.created_dt
	</select>
	
	<insert id="saveUser" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_info (
			shop_id, user_name, user_status, user_role, created_id, created_dt, modified_id, modified_dt
		)
		VALUES (
			#{_shopId}, #{userName}, #{userStatus}, #{userRole}, #{_userId}, now(), #{_userId}, now()
		)
	</insert>
	
	<insert id="saveInfo" parameterType="map">
		INSERT INTO employee_info (
			id, shop_id, employee_code, jumin_num, address, user_status, phone_number,
			comments, account_num, created_id, created_dt, modified_id, modified_dt
			)
		VALUES (
			#{id}, #{_shopId}, #{employeeCode}, #{enc_jumin}, #{address}, #{status}, #{enc_tel},
			#{comments}, #{account_num}, #{_userId}, now(), #{_userId}, now()
		)
	</insert>
	
	<insert id="saveDetailInfo" parameterType="map">
		INSERT INTO employment_details(
			id, join_date, hire_date, start_time, end_time, wage_type, wage, job_type, working_day,
			created_id, created_dt, modified_id, modified_dt
		)
		VALUES (
			#{id}, #{join_date}, #{hire_date}, #{start_time}::time, #{end_time}::time, #{wage_type}, #{wage}::numeric, #{job_type}, #{working_day},
			#{_userId}, now(), #{_userId}, now()
		)
	</insert>
	
	<insert id="saveImgInfo" parameterType="map">
		INSERT INTO employee_img(
			id, img_name, origin_name, created_id, created_dt, modified_id, modified_dt
		)
		VALUES (
			#{id}, #{encFileName}, #{originFileName}, #{_userId}, now(), #{_userId}, now()
		)
	</insert>
	
	<select id="getEmployeeInfo" resultType="map" parameterType="map">
		SELECT 
			c.user_name, a.id, a.employee_code, a.jumin_num, a.address, a.user_status, a.phone_number, a."comments", a.account_num,
			b.join_date, b.hire_date, b.start_time, b.end_time, b.wage_type, b.wage, b.job_type, b.working_day
		FROM employee_info a
		LEFT OUTER JOIN employment_details b on b.id = a.id
		LEFT OUTER JOIN user_info c on c.id::varchar = a.id
		WHERE a.id=#{id}
	</select>
	
	<select id="getEmployeeImg" resultType="map" parameterType="map">
		SELECT img_name
		FROM employee_img
		WHERE id = #{id}
	</select>
</mapper>
